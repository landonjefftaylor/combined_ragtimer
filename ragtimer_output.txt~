admin.sh
artifact.sh
bin
classes
depgraph.py
genbash.py
ignore.txt
main.py
Makefile
prefixes.py
prefix_parser.py
__pycache__
reaction_list.txt
reactions_mod.py
reactions_v5.py
run_lots.sh
src
testprint.txt
test.sh
test_subp.py
test_v2
test_v2.cpp
test_v2.dsc
test_v2.h
test_v2.ivy
test_v2.txt
test_v3
test_v3.cpp
test_v3.dsc
test_v3.h
test_v3.ivy
trace_list.txt
two.sh

================================================================================
Welcome to RAGTIMER for trace generation.
This is a work in progress. Please submit bug reports.
================================================================================

Constructing a dependency graph
Finished constructing a dependency graph, found these prefixes:
R1 

/home/landonjefftaylor/combined_ragtimer/_ragtimer
Welcome to RAGTIMER. At present, this is two tools joined together. We are working on joining them together more seamlessly but appreciate your patience with this prototype tool.
I will generate traces, then commute.
I am assuming you have placed your model in the following files:
model.ragtimer (in the RAGTIMER format; see README)
model.prop (file with property without time constraints in first line, i.e., x=10 )
model.sm (prism model file)
model.csl (prism csl property)

Running RAGTIMER trace generation
/home/landonjefftaylor/combined_ragtimer/_ragtimer
