admin.sh
artifact.sh
bin
classes
depgraph.py
genbash.py
ignore.txt
main.py
Makefile
prefixes.py
prefix_parser.py
__pycache__
reaction_list.txt
reactions_mod.py
reactions_v5.py
run_lots.sh
src
testprint.txt
test.sh
test_subp.py
test_v2
test_v2.cpp
test_v2.dsc
test_v2.h
test_v2.ivy
test_v2.txt
test_v3
test_v3.cpp
test_v3.dsc
test_v3.h
test_v3.ivy
trace_list.txt
two.sh

================================================================================
Welcome to RAGTIMER for trace generation.
This is a work in progress. Please submit bug reports.
================================================================================

Constructing a dependency graph
Finished constructing a dependency graph, found these prefixes:
R5 
R3 R5 
R8 R5 

/home/landonjefftaylor/combined_ragtimer/_ragtimer
Finding 10000
For each prefix: 5000
--------------------------------------------------
Testing Prefix R3 R5 
--------------------------------------------------
starting to run initial test
finished initial test
The iters recorded for this initial example is 156
Running test for 100 simulation runs in group 1 of 50
Running test for 100 simulation runs in group 2 of 50
Running test for 100 simulation runs in group 3 of 50
Running test for 100 simulation runs in group 4 of 50
Running test for 100 simulation runs in group 5 of 50
Running test for 100 simulation runs in group 6 of 50
Running test for 100 simulation runs in group 7 of 50
Running test for 100 simulation runs in group 8 of 50
Running test for 100 simulation runs in group 9 of 50
Running test for 100 simulation runs in group 10 of 50
Running test for 100 simulation runs in group 11 of 50
Running test for 100 simulation runs in group 12 of 50
Running test for 100 simulation runs in group 13 of 50
Running test for 100 simulation runs in group 14 of 50
Running test for 100 simulation runs in group 15 of 50
Running test for 100 simulation runs in group 16 of 50
Running test for 100 simulation runs in group 17 of 50
Running test for 100 simulation runs in group 18 of 50
Running test for 100 simulation runs in group 19 of 50
Running test for 100 simulation runs in group 20 of 50
Running test for 100 simulation runs in group 21 of 50
Running test for 100 simulation runs in group 22 of 50
Running test for 100 simulation runs in group 23 of 50
Running test for 100 simulation runs in group 24 of 50
Running test for 100 simulation runs in group 25 of 50
Running test for 100 simulation runs in group 26 of 50
Running test for 100 simulation runs in group 27 of 50
Running test for 100 simulation runs in group 28 of 50
Running test for 100 simulation runs in group 29 of 50
Running test for 100 simulation runs in group 30 of 50
Running test for 100 simulation runs in group 31 of 50
Running test for 100 simulation runs in group 32 of 50
Running test for 100 simulation runs in group 33 of 50
Running test for 100 simulation runs in group 34 of 50
Running test for 100 simulation runs in group 35 of 50
Running test for 100 simulation runs in group 36 of 50
Running test for 100 simulation runs in group 37 of 50
Running test for 100 simulation runs in group 38 of 50
Running test for 100 simulation runs in group 39 of 50
Running test for 100 simulation runs in group 40 of 50
Running test for 100 simulation runs in group 41 of 50
Running test for 100 simulation runs in group 42 of 50
Running test for 100 simulation runs in group 43 of 50
Running test for 100 simulation runs in group 44 of 50
Running test for 100 simulation runs in group 45 of 50
Running test for 100 simulation runs in group 46 of 50
Running test for 100 simulation runs in group 47 of 50
Running test for 100 simulation runs in group 48 of 50
Running test for 100 simulation runs in group 49 of 50
Running test for 100 simulation runs in group 50 of 50
finished randomized testing

The traces recorded and the information on those traces are stored in 'reaction_list.txt'

The traces by themselves (i.e. for simulation and commuting) are found in 'trace_list.txt'
Probability in this prefix: 0.000000e+00
Running total probability:  0.0
--------------------------------------------------
Testing Prefix R8 R5 
--------------------------------------------------
starting to run initial test
finished initial test
The iters recorded for this initial example is 1052
Running test for 100 simulation runs in group 1 of 50
Running test for 100 simulation runs in group 2 of 50
Running test for 100 simulation runs in group 3 of 50
Running test for 100 simulation runs in group 4 of 50
Running test for 100 simulation runs in group 5 of 50
Running test for 100 simulation runs in group 6 of 50
Running test for 100 simulation runs in group 7 of 50
Running test for 100 simulation runs in group 8 of 50
Running test for 100 simulation runs in group 9 of 50
Running test for 100 simulation runs in group 10 of 50
Running test for 100 simulation runs in group 11 of 50
Running test for 100 simulation runs in group 12 of 50
Running test for 100 simulation runs in group 13 of 50
Running test for 100 simulation runs in group 14 of 50
Running test for 100 simulation runs in group 15 of 50
Running test for 100 simulation runs in group 16 of 50
Running test for 100 simulation runs in group 17 of 50
Running test for 100 simulation runs in group 18 of 50
Running test for 100 simulation runs in group 19 of 50
Running test for 100 simulation runs in group 20 of 50
Running test for 100 simulation runs in group 21 of 50
Running test for 100 simulation runs in group 22 of 50
Running test for 100 simulation runs in group 23 of 50
Running test for 100 simulation runs in group 24 of 50
Running test for 100 simulation runs in group 25 of 50
Running test for 100 simulation runs in group 26 of 50
Running test for 100 simulation runs in group 27 of 50
Running test for 100 simulation runs in group 28 of 50
Running test for 100 simulation runs in group 29 of 50
Running test for 100 simulation runs in group 30 of 50
Running test for 100 simulation runs in group 31 of 50
Running test for 100 simulation runs in group 32 of 50
Running test for 100 simulation runs in group 33 of 50
Running test for 100 simulation runs in group 34 of 50
Running test for 100 simulation runs in group 35 of 50
Running test for 100 simulation runs in group 36 of 50
Running test for 100 simulation runs in group 37 of 50
Running test for 100 simulation runs in group 38 of 50
Running test for 100 simulation runs in group 39 of 50
Running test for 100 simulation runs in group 40 of 50
Running test for 100 simulation runs in group 41 of 50
Running test for 100 simulation runs in group 42 of 50
Running test for 100 simulation runs in group 43 of 50
Running test for 100 simulation runs in group 44 of 50
Running test for 100 simulation runs in group 45 of 50
Running test for 100 simulation runs in group 46 of 50
Running test for 100 simulation runs in group 47 of 50
Running test for 100 simulation runs in group 48 of 50
Running test for 100 simulation runs in group 49 of 50
Running test for 100 simulation runs in group 50 of 50
finished randomized testing

The traces recorded and the information on those traces are stored in 'reaction_list.txt'

The traces by themselves (i.e. for simulation and commuting) are found in 'trace_list.txt'
Probability in this prefix: 0.000000e+00
Running total probability:  0.0

================================================================================
Total Sum of Unique Path Probabilities: 0.0
================================================================================




Welcome to RAGTIMER. At present, this is two tools joined together. We are working on joining them together more seamlessly but appreciate your patience with this prototype tool.
I will generate traces, then commute.
I am assuming you have placed your model in the following files:
model.ragtimer (in the RAGTIMER format; see README)
model.prop (file with property without time constraints in first line, i.e., x=10 )
model.sm (prism model file)
model.csl (prism csl property)

Running RAGTIMER trace generation
/home/landonjefftaylor/combined_ragtimer/_ragtimer
